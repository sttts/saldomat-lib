<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="gnutls-crypto">
<refmeta>
<refentrytitle role="top_of_page" id="gnutls-crypto.top_of_page">crypto</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GNUTLS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>crypto</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="gnutls-crypto.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#define             <link linkend="GNUTLS-CRYPTO-API-VERSION--CAPS">GNUTLS_CRYPTO_API_VERSION</link>
<link linkend="int">int</link>                 <link linkend="init">init</link>                                (<link linkend="void">void</link> **ctx);
<link linkend="int">int</link>                 <link linkend="setkey">setkey</link>                              (<link linkend="void">void</link> *ctx,
                                                         const <link linkend="void">void</link> *key,
                                                         <link linkend="size-t">size_t</link> keysize);
<link linkend="int">int</link>                 <link linkend="setiv">setiv</link>                               (<link linkend="void">void</link> *ctx,
                                                         const <link linkend="void">void</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivsize);
<link linkend="int">int</link>                 <link linkend="encrypt">encrypt</link>                             (<link linkend="void">void</link> *ctx,
                                                         const <link linkend="void">void</link> *plain,
                                                         <link linkend="size-t">size_t</link> plainsize,
                                                         <link linkend="void">void</link> *encr,
                                                         <link linkend="size-t">size_t</link> encrsize);
<link linkend="int">int</link>                 <link linkend="decrypt">decrypt</link>                             (<link linkend="void">void</link> *ctx,
                                                         const <link linkend="void">void</link> *encr,
                                                         <link linkend="size-t">size_t</link> encrsize,
                                                         <link linkend="void">void</link> *plain,
                                                         <link linkend="size-t">size_t</link> plainsize);
<link linkend="void">void</link>                <link linkend="deinit">deinit</link>                              (<link linkend="void">void</link> *ctx);
<link linkend="int">int</link>                 <link linkend="hash">hash</link>                                (<link linkend="void">void</link> *ctx,
                                                         const <link linkend="void">void</link> *text,
                                                         <link linkend="size-t">size_t</link> textsize);
<link linkend="int">int</link>                 <link linkend="copy">copy</link>                                (<link linkend="void">void</link> **dst_ctx,
                                                         <link linkend="void">void</link> *src_ctx);
<link linkend="int">int</link>                 <link linkend="output">output</link>                              (<link linkend="void">void</link> *src_ctx,
                                                         <link linkend="void">void</link> *digest,
                                                         <link linkend="size-t">size_t</link> digestsize);
typedef             <link linkend="gnutls-crypto-single-digest-st">gnutls_crypto_single_digest_st</link>;
typedef             <link linkend="gnutls-crypto-digest-st">gnutls_crypto_digest_st</link>;
enum                <link linkend="gnutls-rnd-level-t">gnutls_rnd_level_t</link>;
enum                <link linkend="gnutls-pk-flag-t">gnutls_pk_flag_t</link>;
<link linkend="int">int</link>                 <link linkend="rnd">rnd</link>                                 (<link linkend="void">void</link> *ctx,
                                                         <link linkend="int">int</link> level,
                                                         <link linkend="void">void</link> *data,
                                                         <link linkend="size-t">size_t</link> datasize);
typedef             <link linkend="bigint-t">bigint_t</link>;
enum                <link linkend="gnutls-bigint-format-t">gnutls_bigint_format_t</link>;
<link linkend="bigint-t">bigint_t</link>            <link linkend="bigint-new">bigint_new</link>                          (<link linkend="int">int</link> nbits);
<link linkend="void">void</link>                <link linkend="bigint-release">bigint_release</link>                      (<link linkend="bigint-t">bigint_t</link> n);
<link linkend="int">int</link>                 <link linkend="bigint-cmp">bigint_cmp</link>                          (const <link linkend="bigint-t">bigint_t</link> m1,
                                                         const <link linkend="bigint-t">bigint_t</link> m2);
<link linkend="int">int</link>                 <link linkend="bigint-cmp-ui">bigint_cmp_ui</link>                       (const <link linkend="bigint-t">bigint_t</link> m1,
                                                         <link linkend="unsigned-long-">unsigned long </link> m2);
<link linkend="bigint-t">bigint_t</link>            <link linkend="bigint-mod">bigint_mod</link>                          (const <link linkend="bigint-t">bigint_t</link> a,
                                                         const <link linkend="bigint-t">bigint_t</link> b);
<link linkend="bigint-t">bigint_t</link>            <link linkend="bigint-set">bigint_set</link>                          (<link linkend="bigint-t">bigint_t</link> a,
                                                         const <link linkend="bigint-t">bigint_t</link> b);
<link linkend="bigint-t">bigint_t</link>            <link linkend="bigint-set-ui">bigint_set_ui</link>                       (<link linkend="bigint-t">bigint_t</link> a,
                                                         <link linkend="unsigned-long-">unsigned long </link> b);
unsigned <link linkend="int">int</link>        <link linkend="bigint-get-nbits">bigint_get_nbits</link>                    (const <link linkend="bigint-t">bigint_t</link> a);
<link linkend="bigint-t">bigint_t</link>            <link linkend="bigint-powm">bigint_powm</link>                         (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> b,
                                                         const <link linkend="bigint-t">bigint_t</link> e,
                                                         const <link linkend="bigint-t">bigint_t</link> m);
<link linkend="bigint-t">bigint_t</link>            <link linkend="bigint-addm">bigint_addm</link>                         (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         const <link linkend="bigint-t">bigint_t</link> b,
                                                         const <link linkend="bigint-t">bigint_t</link> m);
<link linkend="bigint-t">bigint_t</link>            <link linkend="bigint-subm">bigint_subm</link>                         (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         const <link linkend="bigint-t">bigint_t</link> b,
                                                         const <link linkend="bigint-t">bigint_t</link> m);
<link linkend="bigint-t">bigint_t</link>            <link linkend="bigint-mulm">bigint_mulm</link>                         (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         const <link linkend="bigint-t">bigint_t</link> b,
                                                         const <link linkend="bigint-t">bigint_t</link> m);
<link linkend="bigint-t">bigint_t</link>            <link linkend="bigint-mul">bigint_mul</link>                          (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         const <link linkend="bigint-t">bigint_t</link> b);
<link linkend="bigint-t">bigint_t</link>            <link linkend="bigint-add-ui">bigint_add_ui</link>                       (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         <link linkend="unsigned-long-">unsigned long </link> b);
<link linkend="bigint-t">bigint_t</link>            <link linkend="bigint-sub-ui">bigint_sub_ui</link>                       (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         <link linkend="unsigned-long-">unsigned long </link> b);
<link linkend="bigint-t">bigint_t</link>            <link linkend="bigint-mul-ui">bigint_mul_ui</link>                       (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         <link linkend="unsigned-long-">unsigned long </link> b);
<link linkend="bigint-t">bigint_t</link>            <link linkend="bigint-div">bigint_div</link>                          (<link linkend="bigint-t">bigint_t</link> q,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         const <link linkend="bigint-t">bigint_t</link> b);
<link linkend="int">int</link>                 <link linkend="bigint-prime-check">bigint_prime_check</link>                  (const <link linkend="bigint-t">bigint_t</link> pp);
<link linkend="int">int</link>                 <link linkend="bigint-generate-group">bigint_generate_group</link>               (<link linkend="gnutls-group-st">gnutls_group_st</link> *gg,
                                                         unsigned <link linkend="int">int</link> bits);
<link linkend="bigint-t">bigint_t</link>            <link linkend="bigint-scan">bigint_scan</link>                         (const <link linkend="void">void</link> *buf,
                                                         <link linkend="size-t">size_t</link> buf_size,
                                                         <link linkend="gnutls-bigint-format-t">gnutls_bigint_format_t</link> format);
<link linkend="int">int</link>                 <link linkend="bigint-print">bigint_print</link>                        (const <link linkend="bigint-t">bigint_t</link> a,
                                                         <link linkend="void">void</link> *buf,
                                                         <link linkend="size-t">size_t</link> *buf_size,
                                                         <link linkend="gnutls-bigint-format-t">gnutls_bigint_format_t</link> format);
#define             <link linkend="GNUTLS-MAX-PK-PARAMS--CAPS">GNUTLS_MAX_PK_PARAMS</link>
<link linkend="void">void</link>                <link linkend="gnutls-pk-params-release">gnutls_pk_params_release</link>            (<link linkend="gnutls-pk-params-st">gnutls_pk_params_st</link> *p);
<link linkend="void">void</link>                <link linkend="gnutls-pk-params-init">gnutls_pk_params_init</link>               (<link linkend="gnutls-pk-params-st">gnutls_pk_params_st</link> *p);
enum                <link linkend="gnutls-direction-t">gnutls_direction_t</link>;
<link linkend="int">int</link>                 <link linkend="sign">sign</link>                                (<link linkend="gnutls-pk-algorithm-t">gnutls_pk_algorithm_t</link> ,
                                                         <link linkend="gnutls-datum-t">gnutls_datum_t</link> *signature,
                                                         const <link linkend="gnutls-datum-t">gnutls_datum_t</link> *data,
                                                         const <link linkend="gnutls-pk-params-st">gnutls_pk_params_st</link> *);
<link linkend="int">int</link>                 <link linkend="verify">verify</link>                              (<link linkend="gnutls-pk-algorithm-t">gnutls_pk_algorithm_t</link> ,
                                                         const <link linkend="gnutls-datum-t">gnutls_datum_t</link> *data,
                                                         const <link linkend="gnutls-datum-t">gnutls_datum_t</link> *signature,
                                                         const <link linkend="gnutls-pk-params-st">gnutls_pk_params_st</link> *);
<link linkend="int">int</link>                 <link linkend="generate">generate</link>                            (<link linkend="gnutls-pk-algorithm-t">gnutls_pk_algorithm_t</link> ,
                                                         unsigned <link linkend="int">int</link> level,
                                                         <link linkend="gnutls-pk-params-st">gnutls_pk_params_st</link> *);
<link linkend="int">int</link>                 <link linkend="pk-fixup-private-params">pk_fixup_private_params</link>             (<link linkend="gnutls-pk-algorithm-t">gnutls_pk_algorithm_t</link> ,
                                                         <link linkend="gnutls-direction-t">gnutls_direction_t</link> ,
                                                         <link linkend="gnutls-pk-params-st">gnutls_pk_params_st</link> *);
#define             <link linkend="gnutls-crypto-single-cipher-register">gnutls_crypto_single_cipher_register</link>(algo, prio, st)
#define             <link linkend="gnutls-crypto-single-mac-register">gnutls_crypto_single_mac_register</link>   (algo, prio, st)
#define             <link linkend="gnutls-crypto-single-digest-register">gnutls_crypto_single_digest_register</link>(algo, prio, st)
<link linkend="int">int</link>                 <link linkend="gnutls-crypto-single-cipher-register2">gnutls_crypto_single_cipher_register2</link>
                                                        (<link linkend="gnutls-cipher-algorithm-t">gnutls_cipher_algorithm_t</link> algorithm,
                                                         <link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-single-cipher-st">gnutls_crypto_single_cipher_st</link> *s);
<link linkend="int">int</link>                 <link linkend="gnutls-crypto-single-mac-register2">gnutls_crypto_single_mac_register2</link>  (<link linkend="gnutls-mac-algorithm-t">gnutls_mac_algorithm_t</link> algorithm,
                                                         <link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-single-mac-st">gnutls_crypto_single_mac_st</link> *s);
<link linkend="int">int</link>                 <link linkend="gnutls-crypto-single-digest-register2">gnutls_crypto_single_digest_register2</link>
                                                        (<link linkend="gnutls-digest-algorithm-t">gnutls_digest_algorithm_t</link> algorithm,
                                                         <link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-single-digest-st">gnutls_crypto_single_digest_st</link> *s);
#define             <link linkend="gnutls-crypto-cipher-register">gnutls_crypto_cipher_register</link>       (prio, st)
#define             <link linkend="gnutls-crypto-mac-register">gnutls_crypto_mac_register</link>          (prio, st)
#define             <link linkend="gnutls-crypto-digest-register">gnutls_crypto_digest_register</link>       (prio, st)
<link linkend="int">int</link>                 <link linkend="gnutls-crypto-cipher-register2">gnutls_crypto_cipher_register2</link>      (<link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-cipher-st">gnutls_crypto_cipher_st</link> *s);
<link linkend="int">int</link>                 <link linkend="gnutls-crypto-mac-register2">gnutls_crypto_mac_register2</link>         (<link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-mac-st">gnutls_crypto_mac_st</link> *s);
<link linkend="int">int</link>                 <link linkend="gnutls-crypto-digest-register2">gnutls_crypto_digest_register2</link>      (<link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-digest-st">gnutls_crypto_digest_st</link> *s);
#define             <link linkend="gnutls-crypto-rnd-register">gnutls_crypto_rnd_register</link>          (prio, st)
#define             <link linkend="gnutls-crypto-pk-register">gnutls_crypto_pk_register</link>           (prio, st)
#define             <link linkend="gnutls-crypto-bigint-register">gnutls_crypto_bigint_register</link>       (prio, st)
<link linkend="int">int</link>                 <link linkend="gnutls-crypto-rnd-register2">gnutls_crypto_rnd_register2</link>         (<link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-rnd-st">gnutls_crypto_rnd_st</link> *s);
<link linkend="int">int</link>                 <link linkend="gnutls-crypto-pk-register2">gnutls_crypto_pk_register2</link>          (<link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-pk-st">gnutls_crypto_pk_st</link> *s);
<link linkend="int">int</link>                 <link linkend="gnutls-crypto-bigint-register2">gnutls_crypto_bigint_register2</link>      (<link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-bigint-st">gnutls_crypto_bigint_st</link> *s);
</synopsis>
</refsynopsisdiv>









<refsect1 id="gnutls-crypto.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>

<refsect1 id="gnutls-crypto.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GNUTLS-CRYPTO-API-VERSION--CAPS" role="macro">
<title>GNUTLS_CRYPTO_API_VERSION</title>
<indexterm zone="GNUTLS-CRYPTO-API-VERSION--CAPS"><primary sortas="GNUTLS_CRYPTO_API_VERSION">GNUTLS_CRYPTO_API_VERSION</primary></indexterm><programlisting># define GNUTLS_CRYPTO_API_VERSION 0x01
</programlisting>
</refsect2>
<refsect2 id="init" role="function">
<title>init ()</title>
<indexterm zone="init"><primary sortas="init">init</primary></indexterm><programlisting><link linkend="int">int</link>                 init                                (<link linkend="void">void</link> **ctx);</programlisting>
</refsect2>
<refsect2 id="setkey" role="function">
<title>setkey ()</title>
<indexterm zone="setkey"><primary sortas="setkey">setkey</primary></indexterm><programlisting><link linkend="int">int</link>                 setkey                              (<link linkend="void">void</link> *ctx,
                                                         const <link linkend="void">void</link> *key,
                                                         <link linkend="size-t">size_t</link> keysize);</programlisting>
</refsect2>
<refsect2 id="setiv" role="function">
<title>setiv ()</title>
<indexterm zone="setiv"><primary sortas="setiv">setiv</primary></indexterm><programlisting><link linkend="int">int</link>                 setiv                               (<link linkend="void">void</link> *ctx,
                                                         const <link linkend="void">void</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivsize);</programlisting>
</refsect2>
<refsect2 id="encrypt" role="function">
<title>encrypt ()</title>
<indexterm zone="encrypt"><primary sortas="encrypt">encrypt</primary></indexterm><programlisting><link linkend="int">int</link>                 encrypt                             (<link linkend="void">void</link> *ctx,
                                                         const <link linkend="void">void</link> *plain,
                                                         <link linkend="size-t">size_t</link> plainsize,
                                                         <link linkend="void">void</link> *encr,
                                                         <link linkend="size-t">size_t</link> encrsize);</programlisting>
</refsect2>
<refsect2 id="decrypt" role="function">
<title>decrypt ()</title>
<indexterm zone="decrypt"><primary sortas="decrypt">decrypt</primary></indexterm><programlisting><link linkend="int">int</link>                 decrypt                             (<link linkend="void">void</link> *ctx,
                                                         const <link linkend="void">void</link> *encr,
                                                         <link linkend="size-t">size_t</link> encrsize,
                                                         <link linkend="void">void</link> *plain,
                                                         <link linkend="size-t">size_t</link> plainsize);</programlisting>
</refsect2>
<refsect2 id="deinit" role="function">
<title>deinit ()</title>
<indexterm zone="deinit"><primary sortas="deinit">deinit</primary></indexterm><programlisting><link linkend="void">void</link>                deinit                              (<link linkend="void">void</link> *ctx);</programlisting>
</refsect2>
<refsect2 id="hash" role="function">
<title>hash ()</title>
<indexterm zone="hash"><primary sortas="hash">hash</primary></indexterm><programlisting><link linkend="int">int</link>                 hash                                (<link linkend="void">void</link> *ctx,
                                                         const <link linkend="void">void</link> *text,
                                                         <link linkend="size-t">size_t</link> textsize);</programlisting>
</refsect2>
<refsect2 id="copy" role="function">
<title>copy ()</title>
<indexterm zone="copy"><primary sortas="copy">copy</primary></indexterm><programlisting><link linkend="int">int</link>                 copy                                (<link linkend="void">void</link> **dst_ctx,
                                                         <link linkend="void">void</link> *src_ctx);</programlisting>
</refsect2>
<refsect2 id="output" role="function">
<title>output ()</title>
<indexterm zone="output"><primary sortas="output">output</primary></indexterm><programlisting><link linkend="int">int</link>                 output                              (<link linkend="void">void</link> *src_ctx,
                                                         <link linkend="void">void</link> *digest,
                                                         <link linkend="size-t">size_t</link> digestsize);</programlisting>
</refsect2>
<refsect2 id="gnutls-crypto-single-digest-st" role="typedef">
<title>gnutls_crypto_single_digest_st</title>
<indexterm zone="gnutls-crypto-single-digest-st"><primary sortas="gnutls_crypto_single_digest_st">gnutls_crypto_single_digest_st</primary></indexterm><programlisting>typedef gnutls_crypto_single_mac_st gnutls_crypto_single_digest_st;
</programlisting>
</refsect2>
<refsect2 id="gnutls-crypto-digest-st" role="typedef">
<title>gnutls_crypto_digest_st</title>
<indexterm zone="gnutls-crypto-digest-st"><primary sortas="gnutls_crypto_digest_st">gnutls_crypto_digest_st</primary></indexterm><programlisting>typedef gnutls_crypto_mac_st gnutls_crypto_digest_st;
</programlisting>
</refsect2>
<refsect2 id="gnutls-rnd-level-t" role="enum">
<title>enum gnutls_rnd_level_t</title>
<indexterm zone="gnutls-rnd-level-t"><primary sortas="gnutls_rnd_level_t">gnutls_rnd_level_t</primary></indexterm><programlisting>typedef enum gnutls_rnd_level
{
  /* fatal in parts of session if broken, i.e., vulnerable to
     statistical analysis */
  GNUTLS_RND_NONCE = 0,
  /* fatal in session if broken */
  GNUTLS_RND_RANDOM = 1,
  /* fatal in many sessions if broken */
  GNUTLS_RND_KEY = 2
} gnutls_rnd_level_t;
</programlisting>
</refsect2>
<refsect2 id="gnutls-pk-flag-t" role="enum">
<title>enum gnutls_pk_flag_t</title>
<indexterm zone="gnutls-pk-flag-t"><primary sortas="gnutls_pk_flag_t">gnutls_pk_flag_t</primary></indexterm><programlisting>typedef enum
{
  GNUTLS_PK_FLAG_NONE = 0
} gnutls_pk_flag_t;
</programlisting>
</refsect2>
<refsect2 id="rnd" role="function">
<title>rnd ()</title>
<indexterm zone="rnd"><primary sortas="rnd">rnd</primary></indexterm><programlisting><link linkend="int">int</link>                 rnd                                 (<link linkend="void">void</link> *ctx,
                                                         <link linkend="int">int</link> level,
                                                         <link linkend="void">void</link> *data,
                                                         <link linkend="size-t">size_t</link> datasize);</programlisting>
</refsect2>
<refsect2 id="bigint-t" role="typedef">
<title>bigint_t</title>
<indexterm zone="bigint-t"><primary sortas="bigint_t">bigint_t</primary></indexterm><programlisting>typedef void *bigint_t;
</programlisting>
</refsect2>
<refsect2 id="gnutls-bigint-format-t" role="enum">
<title>enum gnutls_bigint_format_t</title>
<indexterm zone="gnutls-bigint-format-t"><primary sortas="gnutls_bigint_format_t">gnutls_bigint_format_t</primary></indexterm><programlisting>typedef enum
{
  /* raw unsigned integer format */
  GNUTLS_MPI_FORMAT_USG = 0,
  /* raw signed integer format - always a leading zero when positive */
  GNUTLS_MPI_FORMAT_STD = 1,
  /* the pgp integer format */
  GNUTLS_MPI_FORMAT_PGP = 2
} gnutls_bigint_format_t;
</programlisting>
</refsect2>
<refsect2 id="bigint-new" role="function">
<title>bigint_new ()</title>
<indexterm zone="bigint-new"><primary sortas="bigint_new">bigint_new</primary></indexterm><programlisting><link linkend="bigint-t">bigint_t</link>            bigint_new                          (<link linkend="int">int</link> nbits);</programlisting>
</refsect2>
<refsect2 id="bigint-release" role="function">
<title>bigint_release ()</title>
<indexterm zone="bigint-release"><primary sortas="bigint_release">bigint_release</primary></indexterm><programlisting><link linkend="void">void</link>                bigint_release                      (<link linkend="bigint-t">bigint_t</link> n);</programlisting>
</refsect2>
<refsect2 id="bigint-cmp" role="function">
<title>bigint_cmp ()</title>
<indexterm zone="bigint-cmp"><primary sortas="bigint_cmp">bigint_cmp</primary></indexterm><programlisting><link linkend="int">int</link>                 bigint_cmp                          (const <link linkend="bigint-t">bigint_t</link> m1,
                                                         const <link linkend="bigint-t">bigint_t</link> m2);</programlisting>
</refsect2>
<refsect2 id="bigint-cmp-ui" role="function">
<title>bigint_cmp_ui ()</title>
<indexterm zone="bigint-cmp-ui"><primary sortas="bigint_cmp_ui">bigint_cmp_ui</primary></indexterm><programlisting><link linkend="int">int</link>                 bigint_cmp_ui                       (const <link linkend="bigint-t">bigint_t</link> m1,
                                                         <link linkend="unsigned-long-">unsigned long </link> m2);</programlisting>
</refsect2>
<refsect2 id="bigint-mod" role="function">
<title>bigint_mod ()</title>
<indexterm zone="bigint-mod"><primary sortas="bigint_mod">bigint_mod</primary></indexterm><programlisting><link linkend="bigint-t">bigint_t</link>            bigint_mod                          (const <link linkend="bigint-t">bigint_t</link> a,
                                                         const <link linkend="bigint-t">bigint_t</link> b);</programlisting>
</refsect2>
<refsect2 id="bigint-set" role="function">
<title>bigint_set ()</title>
<indexterm zone="bigint-set"><primary sortas="bigint_set">bigint_set</primary></indexterm><programlisting><link linkend="bigint-t">bigint_t</link>            bigint_set                          (<link linkend="bigint-t">bigint_t</link> a,
                                                         const <link linkend="bigint-t">bigint_t</link> b);</programlisting>
</refsect2>
<refsect2 id="bigint-set-ui" role="function">
<title>bigint_set_ui ()</title>
<indexterm zone="bigint-set-ui"><primary sortas="bigint_set_ui">bigint_set_ui</primary></indexterm><programlisting><link linkend="bigint-t">bigint_t</link>            bigint_set_ui                       (<link linkend="bigint-t">bigint_t</link> a,
                                                         <link linkend="unsigned-long-">unsigned long </link> b);</programlisting>
</refsect2>
<refsect2 id="bigint-get-nbits" role="function">
<title>bigint_get_nbits ()</title>
<indexterm zone="bigint-get-nbits"><primary sortas="bigint_get_nbits">bigint_get_nbits</primary></indexterm><programlisting>unsigned <link linkend="int">int</link>        bigint_get_nbits                    (const <link linkend="bigint-t">bigint_t</link> a);</programlisting>
</refsect2>
<refsect2 id="bigint-powm" role="function">
<title>bigint_powm ()</title>
<indexterm zone="bigint-powm"><primary sortas="bigint_powm">bigint_powm</primary></indexterm><programlisting><link linkend="bigint-t">bigint_t</link>            bigint_powm                         (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> b,
                                                         const <link linkend="bigint-t">bigint_t</link> e,
                                                         const <link linkend="bigint-t">bigint_t</link> m);</programlisting>
</refsect2>
<refsect2 id="bigint-addm" role="function">
<title>bigint_addm ()</title>
<indexterm zone="bigint-addm"><primary sortas="bigint_addm">bigint_addm</primary></indexterm><programlisting><link linkend="bigint-t">bigint_t</link>            bigint_addm                         (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         const <link linkend="bigint-t">bigint_t</link> b,
                                                         const <link linkend="bigint-t">bigint_t</link> m);</programlisting>
</refsect2>
<refsect2 id="bigint-subm" role="function">
<title>bigint_subm ()</title>
<indexterm zone="bigint-subm"><primary sortas="bigint_subm">bigint_subm</primary></indexterm><programlisting><link linkend="bigint-t">bigint_t</link>            bigint_subm                         (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         const <link linkend="bigint-t">bigint_t</link> b,
                                                         const <link linkend="bigint-t">bigint_t</link> m);</programlisting>
</refsect2>
<refsect2 id="bigint-mulm" role="function">
<title>bigint_mulm ()</title>
<indexterm zone="bigint-mulm"><primary sortas="bigint_mulm">bigint_mulm</primary></indexterm><programlisting><link linkend="bigint-t">bigint_t</link>            bigint_mulm                         (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         const <link linkend="bigint-t">bigint_t</link> b,
                                                         const <link linkend="bigint-t">bigint_t</link> m);</programlisting>
</refsect2>
<refsect2 id="bigint-mul" role="function">
<title>bigint_mul ()</title>
<indexterm zone="bigint-mul"><primary sortas="bigint_mul">bigint_mul</primary></indexterm><programlisting><link linkend="bigint-t">bigint_t</link>            bigint_mul                          (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         const <link linkend="bigint-t">bigint_t</link> b);</programlisting>
</refsect2>
<refsect2 id="bigint-add-ui" role="function">
<title>bigint_add_ui ()</title>
<indexterm zone="bigint-add-ui"><primary sortas="bigint_add_ui">bigint_add_ui</primary></indexterm><programlisting><link linkend="bigint-t">bigint_t</link>            bigint_add_ui                       (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         <link linkend="unsigned-long-">unsigned long </link> b);</programlisting>
</refsect2>
<refsect2 id="bigint-sub-ui" role="function">
<title>bigint_sub_ui ()</title>
<indexterm zone="bigint-sub-ui"><primary sortas="bigint_sub_ui">bigint_sub_ui</primary></indexterm><programlisting><link linkend="bigint-t">bigint_t</link>            bigint_sub_ui                       (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         <link linkend="unsigned-long-">unsigned long </link> b);</programlisting>
</refsect2>
<refsect2 id="bigint-mul-ui" role="function">
<title>bigint_mul_ui ()</title>
<indexterm zone="bigint-mul-ui"><primary sortas="bigint_mul_ui">bigint_mul_ui</primary></indexterm><programlisting><link linkend="bigint-t">bigint_t</link>            bigint_mul_ui                       (<link linkend="bigint-t">bigint_t</link> w,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         <link linkend="unsigned-long-">unsigned long </link> b);</programlisting>
</refsect2>
<refsect2 id="bigint-div" role="function">
<title>bigint_div ()</title>
<indexterm zone="bigint-div"><primary sortas="bigint_div">bigint_div</primary></indexterm><programlisting><link linkend="bigint-t">bigint_t</link>            bigint_div                          (<link linkend="bigint-t">bigint_t</link> q,
                                                         const <link linkend="bigint-t">bigint_t</link> a,
                                                         const <link linkend="bigint-t">bigint_t</link> b);</programlisting>
</refsect2>
<refsect2 id="bigint-prime-check" role="function">
<title>bigint_prime_check ()</title>
<indexterm zone="bigint-prime-check"><primary sortas="bigint_prime_check">bigint_prime_check</primary></indexterm><programlisting><link linkend="int">int</link>                 bigint_prime_check                  (const <link linkend="bigint-t">bigint_t</link> pp);</programlisting>
</refsect2>
<refsect2 id="bigint-generate-group" role="function">
<title>bigint_generate_group ()</title>
<indexterm zone="bigint-generate-group"><primary sortas="bigint_generate_group">bigint_generate_group</primary></indexterm><programlisting><link linkend="int">int</link>                 bigint_generate_group               (<link linkend="gnutls-group-st">gnutls_group_st</link> *gg,
                                                         unsigned <link linkend="int">int</link> bits);</programlisting>
</refsect2>
<refsect2 id="bigint-scan" role="function">
<title>bigint_scan ()</title>
<indexterm zone="bigint-scan"><primary sortas="bigint_scan">bigint_scan</primary></indexterm><programlisting><link linkend="bigint-t">bigint_t</link>            bigint_scan                         (const <link linkend="void">void</link> *buf,
                                                         <link linkend="size-t">size_t</link> buf_size,
                                                         <link linkend="gnutls-bigint-format-t">gnutls_bigint_format_t</link> format);</programlisting>
</refsect2>
<refsect2 id="bigint-print" role="function">
<title>bigint_print ()</title>
<indexterm zone="bigint-print"><primary sortas="bigint_print">bigint_print</primary></indexterm><programlisting><link linkend="int">int</link>                 bigint_print                        (const <link linkend="bigint-t">bigint_t</link> a,
                                                         <link linkend="void">void</link> *buf,
                                                         <link linkend="size-t">size_t</link> *buf_size,
                                                         <link linkend="gnutls-bigint-format-t">gnutls_bigint_format_t</link> format);</programlisting>
</refsect2>
<refsect2 id="GNUTLS-MAX-PK-PARAMS--CAPS" role="macro">
<title>GNUTLS_MAX_PK_PARAMS</title>
<indexterm zone="GNUTLS-MAX-PK-PARAMS--CAPS"><primary sortas="GNUTLS_MAX_PK_PARAMS">GNUTLS_MAX_PK_PARAMS</primary></indexterm><programlisting>#define GNUTLS_MAX_PK_PARAMS 6
</programlisting>
</refsect2>
<refsect2 id="gnutls-pk-params-release" role="function">
<title>gnutls_pk_params_release ()</title>
<indexterm zone="gnutls-pk-params-release"><primary sortas="gnutls_pk_params_release">gnutls_pk_params_release</primary></indexterm><programlisting><link linkend="void">void</link>                gnutls_pk_params_release            (<link linkend="gnutls-pk-params-st">gnutls_pk_params_st</link> *p);</programlisting>
</refsect2>
<refsect2 id="gnutls-pk-params-init" role="function">
<title>gnutls_pk_params_init ()</title>
<indexterm zone="gnutls-pk-params-init"><primary sortas="gnutls_pk_params_init">gnutls_pk_params_init</primary></indexterm><programlisting><link linkend="void">void</link>                gnutls_pk_params_init               (<link linkend="gnutls-pk-params-st">gnutls_pk_params_st</link> *p);</programlisting>
</refsect2>
<refsect2 id="gnutls-direction-t" role="enum">
<title>enum gnutls_direction_t</title>
<indexterm zone="gnutls-direction-t"><primary sortas="gnutls_direction_t">gnutls_direction_t</primary></indexterm><programlisting>typedef enum
{
  GNUTLS_IMPORT,
  GNUTLS_EXPORT
} gnutls_direction_t;
</programlisting>
</refsect2>
<refsect2 id="sign" role="function">
<title>sign ()</title>
<indexterm zone="sign"><primary sortas="sign">sign</primary></indexterm><programlisting><link linkend="int">int</link>                 sign                                (<link linkend="gnutls-pk-algorithm-t">gnutls_pk_algorithm_t</link> ,
                                                         <link linkend="gnutls-datum-t">gnutls_datum_t</link> *signature,
                                                         const <link linkend="gnutls-datum-t">gnutls_datum_t</link> *data,
                                                         const <link linkend="gnutls-pk-params-st">gnutls_pk_params_st</link> *);</programlisting>
</refsect2>
<refsect2 id="verify" role="function">
<title>verify ()</title>
<indexterm zone="verify"><primary sortas="verify">verify</primary></indexterm><programlisting><link linkend="int">int</link>                 verify                              (<link linkend="gnutls-pk-algorithm-t">gnutls_pk_algorithm_t</link> ,
                                                         const <link linkend="gnutls-datum-t">gnutls_datum_t</link> *data,
                                                         const <link linkend="gnutls-datum-t">gnutls_datum_t</link> *signature,
                                                         const <link linkend="gnutls-pk-params-st">gnutls_pk_params_st</link> *);</programlisting>
</refsect2>
<refsect2 id="generate" role="function">
<title>generate ()</title>
<indexterm zone="generate"><primary sortas="generate">generate</primary></indexterm><programlisting><link linkend="int">int</link>                 generate                            (<link linkend="gnutls-pk-algorithm-t">gnutls_pk_algorithm_t</link> ,
                                                         unsigned <link linkend="int">int</link> level,
                                                         <link linkend="gnutls-pk-params-st">gnutls_pk_params_st</link> *);</programlisting>
</refsect2>
<refsect2 id="pk-fixup-private-params" role="function">
<title>pk_fixup_private_params ()</title>
<indexterm zone="pk-fixup-private-params"><primary sortas="pk_fixup_private_params">pk_fixup_private_params</primary></indexterm><programlisting><link linkend="int">int</link>                 pk_fixup_private_params             (<link linkend="gnutls-pk-algorithm-t">gnutls_pk_algorithm_t</link> ,
                                                         <link linkend="gnutls-direction-t">gnutls_direction_t</link> ,
                                                         <link linkend="gnutls-pk-params-st">gnutls_pk_params_st</link> *);</programlisting>
</refsect2>
<refsect2 id="gnutls-crypto-single-cipher-register" role="macro">
<title>gnutls_crypto_single_cipher_register()</title>
<indexterm zone="gnutls-crypto-single-cipher-register"><primary sortas="gnutls_crypto_single_cipher_register">gnutls_crypto_single_cipher_register</primary></indexterm><programlisting>#define             gnutls_crypto_single_cipher_register(algo, prio, st)</programlisting>
</refsect2>
<refsect2 id="gnutls-crypto-single-mac-register" role="macro">
<title>gnutls_crypto_single_mac_register()</title>
<indexterm zone="gnutls-crypto-single-mac-register"><primary sortas="gnutls_crypto_single_mac_register">gnutls_crypto_single_mac_register</primary></indexterm><programlisting>#define             gnutls_crypto_single_mac_register(algo, prio, st)</programlisting>
</refsect2>
<refsect2 id="gnutls-crypto-single-digest-register" role="macro">
<title>gnutls_crypto_single_digest_register()</title>
<indexterm zone="gnutls-crypto-single-digest-register"><primary sortas="gnutls_crypto_single_digest_register">gnutls_crypto_single_digest_register</primary></indexterm><programlisting>#define             gnutls_crypto_single_digest_register(algo, prio, st)</programlisting>
</refsect2>
<refsect2 id="gnutls-crypto-single-cipher-register2" role="function" condition="since:2.6.0">
<title>gnutls_crypto_single_cipher_register2 ()</title>
<indexterm zone="gnutls-crypto-single-cipher-register2" role="2.6.0"><primary sortas="gnutls_crypto_single_cipher_register2">gnutls_crypto_single_cipher_register2</primary></indexterm><programlisting><link linkend="int">int</link>                 gnutls_crypto_single_cipher_register2
                                                        (<link linkend="gnutls-cipher-algorithm-t">gnutls_cipher_algorithm_t</link> algorithm,
                                                         <link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-single-cipher-st">gnutls_crypto_single_cipher_st</link> *s);</programlisting>
<para role="since">Since 2.6.0</para></refsect2>
<refsect2 id="gnutls-crypto-single-mac-register2" role="function" condition="since:2.6.0">
<title>gnutls_crypto_single_mac_register2 ()</title>
<indexterm zone="gnutls-crypto-single-mac-register2" role="2.6.0"><primary sortas="gnutls_crypto_single_mac_register2">gnutls_crypto_single_mac_register2</primary></indexterm><programlisting><link linkend="int">int</link>                 gnutls_crypto_single_mac_register2  (<link linkend="gnutls-mac-algorithm-t">gnutls_mac_algorithm_t</link> algorithm,
                                                         <link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-single-mac-st">gnutls_crypto_single_mac_st</link> *s);</programlisting>
<para role="since">Since 2.6.0</para></refsect2>
<refsect2 id="gnutls-crypto-single-digest-register2" role="function" condition="since:2.6.0">
<title>gnutls_crypto_single_digest_register2 ()</title>
<indexterm zone="gnutls-crypto-single-digest-register2" role="2.6.0"><primary sortas="gnutls_crypto_single_digest_register2">gnutls_crypto_single_digest_register2</primary></indexterm><programlisting><link linkend="int">int</link>                 gnutls_crypto_single_digest_register2
                                                        (<link linkend="gnutls-digest-algorithm-t">gnutls_digest_algorithm_t</link> algorithm,
                                                         <link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-single-digest-st">gnutls_crypto_single_digest_st</link> *s);</programlisting>
<para role="since">Since 2.6.0</para></refsect2>
<refsect2 id="gnutls-crypto-cipher-register" role="macro">
<title>gnutls_crypto_cipher_register()</title>
<indexterm zone="gnutls-crypto-cipher-register"><primary sortas="gnutls_crypto_cipher_register">gnutls_crypto_cipher_register</primary></indexterm><programlisting>#define             gnutls_crypto_cipher_register(prio, st)</programlisting>
</refsect2>
<refsect2 id="gnutls-crypto-mac-register" role="macro">
<title>gnutls_crypto_mac_register()</title>
<indexterm zone="gnutls-crypto-mac-register"><primary sortas="gnutls_crypto_mac_register">gnutls_crypto_mac_register</primary></indexterm><programlisting>#define             gnutls_crypto_mac_register(prio, st)</programlisting>
</refsect2>
<refsect2 id="gnutls-crypto-digest-register" role="macro">
<title>gnutls_crypto_digest_register()</title>
<indexterm zone="gnutls-crypto-digest-register"><primary sortas="gnutls_crypto_digest_register">gnutls_crypto_digest_register</primary></indexterm><programlisting>#define             gnutls_crypto_digest_register(prio, st)</programlisting>
</refsect2>
<refsect2 id="gnutls-crypto-cipher-register2" role="function" condition="since:2.6.0">
<title>gnutls_crypto_cipher_register2 ()</title>
<indexterm zone="gnutls-crypto-cipher-register2" role="2.6.0"><primary sortas="gnutls_crypto_cipher_register2">gnutls_crypto_cipher_register2</primary></indexterm><programlisting><link linkend="int">int</link>                 gnutls_crypto_cipher_register2      (<link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-cipher-st">gnutls_crypto_cipher_st</link> *s);</programlisting>
<para role="since">Since 2.6.0</para></refsect2>
<refsect2 id="gnutls-crypto-mac-register2" role="function" condition="since:2.6.0">
<title>gnutls_crypto_mac_register2 ()</title>
<indexterm zone="gnutls-crypto-mac-register2" role="2.6.0"><primary sortas="gnutls_crypto_mac_register2">gnutls_crypto_mac_register2</primary></indexterm><programlisting><link linkend="int">int</link>                 gnutls_crypto_mac_register2         (<link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-mac-st">gnutls_crypto_mac_st</link> *s);</programlisting>
<para role="since">Since 2.6.0</para></refsect2>
<refsect2 id="gnutls-crypto-digest-register2" role="function" condition="since:2.6.0">
<title>gnutls_crypto_digest_register2 ()</title>
<indexterm zone="gnutls-crypto-digest-register2" role="2.6.0"><primary sortas="gnutls_crypto_digest_register2">gnutls_crypto_digest_register2</primary></indexterm><programlisting><link linkend="int">int</link>                 gnutls_crypto_digest_register2      (<link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-digest-st">gnutls_crypto_digest_st</link> *s);</programlisting>
<para role="since">Since 2.6.0</para></refsect2>
<refsect2 id="gnutls-crypto-rnd-register" role="macro">
<title>gnutls_crypto_rnd_register()</title>
<indexterm zone="gnutls-crypto-rnd-register"><primary sortas="gnutls_crypto_rnd_register">gnutls_crypto_rnd_register</primary></indexterm><programlisting>#define             gnutls_crypto_rnd_register(prio, st)</programlisting>
</refsect2>
<refsect2 id="gnutls-crypto-pk-register" role="macro">
<title>gnutls_crypto_pk_register()</title>
<indexterm zone="gnutls-crypto-pk-register"><primary sortas="gnutls_crypto_pk_register">gnutls_crypto_pk_register</primary></indexterm><programlisting>#define             gnutls_crypto_pk_register(prio, st)</programlisting>
</refsect2>
<refsect2 id="gnutls-crypto-bigint-register" role="macro">
<title>gnutls_crypto_bigint_register()</title>
<indexterm zone="gnutls-crypto-bigint-register"><primary sortas="gnutls_crypto_bigint_register">gnutls_crypto_bigint_register</primary></indexterm><programlisting>#define             gnutls_crypto_bigint_register(prio, st)</programlisting>
</refsect2>
<refsect2 id="gnutls-crypto-rnd-register2" role="function" condition="since:2.6.0">
<title>gnutls_crypto_rnd_register2 ()</title>
<indexterm zone="gnutls-crypto-rnd-register2" role="2.6.0"><primary sortas="gnutls_crypto_rnd_register2">gnutls_crypto_rnd_register2</primary></indexterm><programlisting><link linkend="int">int</link>                 gnutls_crypto_rnd_register2         (<link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-rnd-st">gnutls_crypto_rnd_st</link> *s);</programlisting>
<para role="since">Since 2.6.0</para></refsect2>
<refsect2 id="gnutls-crypto-pk-register2" role="function" condition="since:2.6.0">
<title>gnutls_crypto_pk_register2 ()</title>
<indexterm zone="gnutls-crypto-pk-register2" role="2.6.0"><primary sortas="gnutls_crypto_pk_register2">gnutls_crypto_pk_register2</primary></indexterm><programlisting><link linkend="int">int</link>                 gnutls_crypto_pk_register2          (<link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-pk-st">gnutls_crypto_pk_st</link> *s);</programlisting>
<para role="since">Since 2.6.0</para></refsect2>
<refsect2 id="gnutls-crypto-bigint-register2" role="function" condition="since:2.6.0">
<title>gnutls_crypto_bigint_register2 ()</title>
<indexterm zone="gnutls-crypto-bigint-register2" role="2.6.0"><primary sortas="gnutls_crypto_bigint_register2">gnutls_crypto_bigint_register2</primary></indexterm><programlisting><link linkend="int">int</link>                 gnutls_crypto_bigint_register2      (<link linkend="int">int</link> priority,
                                                         <link linkend="int">int</link> version,
                                                         <link linkend="gnutls-crypto-bigint-st">gnutls_crypto_bigint_st</link> *s);</programlisting>
<para role="since">Since 2.6.0</para></refsect2>

</refsect1>




</refentry>
